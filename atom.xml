<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[赵九州的博客]]></title>
  <subtitle><![CDATA[虽然咸鱼翻身还是咸鱼,但至少可以变得好吃一点...]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://jiuzhou-romens.github.io.git/"/>
  <updated>2015-11-25T01:38:45.000Z</updated>
  <id>http://jiuzhou-romens.github.io.git/</id>
  
  <author>
    <name><![CDATA[Geovyn]]></name>
    <email><![CDATA[zhaojiuzhou@163.com#你的联系邮箱]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[使用SDWebImage加载大量图片造成内存泄露的解决方法]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/25/SDWebImage%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/25/SDWebImage内存泄露解决方案/</id>
    <published>2015-11-25T01:38:45.000Z</published>
    <updated>2015-11-25T01:38:45.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/rs/SDWebImage" target="_blank" rel="external">SDWebImage</a> 我相信是个<code>iOS</code>码农都用过，在 github 上 11K+ star , 国内外大多数 App 使用它来进行图片加载。最近在做列表展示的时候，下拉新增不断的增加内容，发现内存占用越来越大，导致 memory warning 最终 terminate 。<br>  <a id="more"></a><br> 在SDWebImage的代码中对memory warning 的处理:<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> - (void)clearMemory &#123;</span><br><span class="line">    [self.memCache removeAllObjects];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>其中self.memCache是NSCache类型的，虽然SDWebImage本身对内存警告执行了操作，然而并没有什么X用。</p>
</blockquote>
<p>借助google查看到问题的具体原因和解决方案<a href="https://github.com/rs/SDWebImage/issues/538" target="_blank" rel="external">issues538</a>。<br>因此在使用SDWebImage加载大量网络图片时，在下拉加载(刷新)中执行下列代码可解决此问题:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[SDImageCache sharedImageCache] <span class="built_in">set</span>Value:nil <span class="keyword">for</span>Key:@<span class="string">"memCache"</span>];</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/rs/SDWebImage">SDWebImage</a> 我相信是个<code>iOS</code>码农都用过，在 github 上 11K+ star , 国内外大多数 App 使用它来进行图片加载。最近在做列表展示的时候，下拉新增不断的增加内容，发现内存占用越来越大，导致 memory warning 最终 terminate 。<br>]]>
    
    </summary>
    
      <category term="Objective-C" scheme="http://jiuzhou-romens.github.io.git/tags/Objective-C/"/>
    
      <category term="SDWebImage" scheme="http://jiuzhou-romens.github.io.git/tags/SDWebImage/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Xcode插件管理]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/24/Xcode--%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/24/Xcode--插件管理/</id>
    <published>2015-11-24T10:30:28.000Z</published>
    <updated>2015-11-24T10:30:28.000Z</updated>
    <content type="html"><![CDATA[<h1 id="安装">安装</h1><p>终端输入:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/supermarin/Alcatraz/master/Scripts/install.sh | sh</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h1 id="卸载">卸载</h1><p>删除插件:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/Library/Application\ Support/Developer/Shared/Xcode/Plug-ins/Alcatraz.xcplugin</span><br></pre></td></tr></table></figure></p>
<p>删除缓存数据:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/Library/Application\ Support/Alcatraz</span><br></pre></td></tr></table></figure></p>
<p><a href="http://www.cocoachina.com/industry/20130918/7022.html" target="_blank" rel="external">那些不能错过的Xcode插件</a><br><a href="http://www.bubuko.com/infodetail-963903.html" target="_blank" rel="external">插件无法运行</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="安装">安装</h1><p>终端输入:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/supermarin/Alcatraz/master/Scripts/install.sh | sh</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="Alcatraz" scheme="http://jiuzhou-romens.github.io.git/tags/Alcatraz/"/>
    
      <category term="Xcode" scheme="http://jiuzhou-romens.github.io.git/tags/Xcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Markdown学习指南]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/24/Markdown/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/24/Markdown/</id>
    <published>2015-11-24T06:39:59.000Z</published>
    <updated>2015-11-24T06:39:59.000Z</updated>
    <content type="html"><![CDATA[<p> Markdown的语法已经足够简单，但是现有的<a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown语法</a>说明更多的是写给web从业者看的，对于很多写作者来说，学习起来效率很低，从<a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">作业部落</a>到<a href="http://www.jianshu.com/" target="_blank" rel="external">简书</a>，从写作者的实际需求出发，总结真正实用的常用格式，深入浅出 <code>Markdown</code> 语法。<br> <a id="more"></a></p>
<h1 id="标题">标题</h1><p>这是最为常用的格式，在<code>Markdown</code>中，你只需要在文本前面加上<code>#</code>号，标题分级，增加<code>#</code>即可。</p>
<blockquote>
<h1 id="一级标题">一级标题</h1><h2 id="二级标题">二级标题</h2><h3 id="三级标题">三级标题</h3><h4 id="四级标题">四级标题</h4><h5 id="五级标题">五级标题</h5><h6 id="六级标题">六级标题</h6></blockquote>
<p>注意：<code>#</code>和<code>一级标题</code>之间保留一个空格，这才是<code>Markdown</code>的标准写法。</p>
<h1 id="列表">列表</h1><p>列表格式也很常用，在 Markdown 中，你只需要在文字前面加上<code>-</code>(无序)或者<code>1.</code>(有序)就可以了，例如：</p>
<blockquote>
<ul>
<li>参考文本1</li>
<li>参考文本2</li>
<li>参考文本3</li>
</ul>
<ol>
<li>参考文本1</li>
<li>参考文本2</li>
<li>参考文本3</li>
</ol>
</blockquote>
<p>注意：<code>-</code> <code>1.</code>和参考文本之间保留一个空格。</p>
<h1 id="链接和图片">链接和图片</h1><p>在<code>Markdown</code>中，插入链接你只需要使用<code>[显示文本](链接地址)</code> 这样的语法即可，例如：<br><a href="http://www.geovyn.com" target="_blank" rel="external">我的博客</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[我的博客](http://www.geovyn.com)</span><br></pre></td></tr></table></figure></p>
<p>在<code>Markdown</code>中，插入图片你只需要使用 <code>![](图片地址)</code> 这样的语法即可，例如：<br><img src="http://www.geovyn.com/images/avatar.jpg" alt=""><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](http://www.geovyn.com/images/avatar.jpg)</span><br></pre></td></tr></table></figure></p>
<h1 id="引用">引用</h1><p>写作的时候需要引用他人的文字，这个时候引用这个格式就很有必要了，在<code>Markdown</code>中，你只需要在你希望引用的文字前面加上<code>&gt;</code>就好了。例如：</p>
<blockquote>
<p>床前明月光<br>疑是地上霜<br>举头望明月<br>低头思故乡</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 床前明月光</span><br><span class="line">&gt; 疑是地上霜</span><br><span class="line">&gt; 举头望明月</span><br><span class="line">&gt; 低头思故乡</span><br></pre></td></tr></table></figure>
<h1 id="粗体和斜体">粗体和斜体</h1><p>用两个<code>*</code>包含一段文本就是粗体的语法，用一个<code>*</code>包含一段文本就是斜体的语法。例如：<br>    <strong>2015</strong> <em>美好开始</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**<span class="number">2015</span>** *美好开始*</span><br></pre></td></tr></table></figure></p>
<h1 id="表格">表格</h1><p>默认居左,<code>:----:</code>居中,<code>-----:</code>居右。</p>
<table>
<thead>
<tr>
<th>姓名:</th>
<th style="text-align:center">性别:</th>
<th style="text-align:right">年龄:</th>
</tr>
</thead>
<tbody>
<tr>
<td>张三</td>
<td style="text-align:center">男</td>
<td style="text-align:right">18</td>
</tr>
<tr>
<td>李四</td>
<td style="text-align:center">男</td>
<td style="text-align:right">19</td>
</tr>
<tr>
<td>王小妹</td>
<td style="text-align:center">女</td>
<td style="text-align:right">20</td>
</tr>
</tbody>
</table>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 姓名:          | 性别:         | 年龄:  |</span><br><span class="line">| ------------- |:-------------:|-----:|</span><br><span class="line">| 张三           | 男            | <span class="number">18</span>    |</span><br><span class="line">| 李四           | 男            | <span class="number">19</span>    |</span><br><span class="line">| 王小妹         | 女            | <span class="number">20</span>    |</span><br></pre></td></tr></table></figure>
<h1 id="显示链接中带括号的图片">显示链接中带括号的图片</h1><p><img src="http://latex.codecogs.com/gif.latex?\prod%20\(n_{i}\)+1" alt=""></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![][<span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span>]: http://latex.codecogs.com/gif.latex?\prod%<span class="number">20</span>\(n_&#123;i&#125;\)+<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h1 id="阅读更多">阅读更多</h1><p>使用代码<code>&lt;!-- more --&gt;</code>即可。</p>
<h1 id="结语">结语</h1><p>以上几种格式是比较常用的格式，对于写作来说应该基本够用了，如果想了解跟多可以参考<a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown语法说明</a>。<br>强烈建议您现在就立马用 Markdown 写一篇文章吧，体会一下 Markdown 的优雅之处！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p> Markdown的语法已经足够简单，但是现有的<a href="http://wowubuntu.com/markdown/">Markdown语法</a>说明更多的是写给web从业者看的，对于很多写作者来说，学习起来效率很低，从<a href="https://www.zybuluo.com/mdeditor">作业部落</a>到<a href="http://www.jianshu.com/">简书</a>，从写作者的实际需求出发，总结真正实用的常用格式，深入浅出 <code>Markdown</code> 语法。<br>]]>
    
    </summary>
    
      <category term="Markdown" scheme="http://jiuzhou-romens.github.io.git/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo主题Yilia]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/24/Hexo%E4%B8%BB%E9%A2%98/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/24/Hexo主题/</id>
    <published>2015-11-24T01:56:20.000Z</published>
    <updated>2015-11-24T01:56:19.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">hexo-theme-yilia</a> 是为 <a href="https://github.com/tommy351/hexo" target="_blank" rel="external">hexo</a> 2.4+制作的主题。<br>响应式设计，风格简约。<br><a id="more"></a><br>终于从octopress迁移到hexo。Yilia是自己设计的主题，分享之，有爱请自取。关于主题：</p>
<ol>
<li>我喜欢简约。所以标签云，搜索框都拿掉了</li>
<li>接地气一点。所以用上了jiathis分享，友言评论，以及baidu的cdn</li>
<li>让大家把注意力放到内容上。这是本主题设计初衷</li>
<li>主题不支持IE6，7，8。以后也不会</li>
</ol>
<p>一、使用</p>
<p><strong>1. 安装</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>
<p><strong>2. 配置</strong></p>
<p>修改hexo根目录下的 <code>_config.yml</code> ： <code>theme: yilia</code></p>
<p><strong>3. 更新</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/yilia</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<p>二、外观</p>
<p><strong>宽屏</strong><br><img src="http://littendomo.sinaapp.com/yilia/yilia-pc1.png" alt="宽屏">        </p>
<p><strong>宽屏文字</strong><br><img src="http://littendomo.sinaapp.com/yilia/yilia-pc2.png" alt="宽屏文字">   </p>
<p><strong>窄屏</strong><br><img src="http://littendomo.sinaapp.com/yilia/yilia-pc3.png" alt="窄屏">     </p>
<p><strong>同步instagram</strong><br><img src="http://littendomo.sinaapp.com/yilia/yilia-pc4.png" alt="同步instagram"></p>
<p><strong>移动端</strong><br><img src="http://littendomo.sinaapp.com/yilia/yilia-mobile.png" alt="移动端"><br><img src="http://littendomo.sinaapp.com/yilia/yilia-mobile2.png" alt="移动端">   </p>
<p>三、配置</p>
<p>主题配置文件在主目录下的<code>_config.yml</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Header&#10;menu:&#10;  &#20027;&#39029;: /&#10;  &#25152;&#26377;&#25991;&#31456;: /archives&#10;  # &#38543;&#31508;: /tags/&#38543;&#31508;&#10;&#10;# SubNav&#10;subnav:&#10;  github: &#34;https://github.com/litten&#34;&#10;  weibo: &#34;http://weibo.com/litten225&#34;&#10;  rss: &#34;http://feed.feedsky.com/litten&#34;&#10;  # facebook: &#34;/&#34;&#10;  # google: &#34;/&#34;&#10;  # twitter: &#34;/&#34;&#10;  # linkedin: &#34;/&#34;&#10;&#10;rss: /atom.xml&#10;&#10;# Content&#10;excerpt_link: more&#10;fancybox: true&#10;&#10;# Miscellaneous&#10;&#10;favicon: /favicon.png&#10;&#10;avatar: &#34;https://avatars2.githubusercontent.com/u/2024949?v=2&#38;s=150&#34;&#10;share: true&#10;duoshuo: true</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/litten/hexo-theme-yilia">hexo-theme-yilia</a> 是为 <a href="https://github.com/tommy351/hexo">hexo</a> 2.4+制作的主题。<br>响应式设计，风格简约。<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://jiuzhou-romens.github.io.git/tags/Hexo/"/>
    
      <category term="主题" scheme="http://jiuzhou-romens.github.io.git/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/23/Hello%20World/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/23/Hello World/</id>
    <published>2015-11-23T08:51:53.000Z</published>
    <updated>2015-11-23T08:51:53.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://jiuzhou-romens.github.io.git/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 基础部分]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/20/Swift%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/20/Swift基础部分/</id>
    <published>2015-11-20T05:50:12.000Z</published>
    <updated>2015-11-23T08:51:40.000Z</updated>
    <content type="html"><![CDATA[<p>Swift 是一门开发 iOS, OS X 和 watchOS 应用的新语言。然而，如果你有 C 或者 Objective-C 开发经验的话，你会发现 Swift 的很多内容都是你熟悉的。<br><a id="more"></a><br>Swift 包含了 C 和 Objective-C 上所有基础数据类型，Int表示整型值；Double和Float表示浮点型值；Bool是布尔型值；String是文本型数据。Swift还提供了三个基本的集合类型，Array，Set和Dictionary，详见集合类型。就像 C 语言一样，Swift 使用变量来进行存储并通过变量名来关联值。在Swift中，广泛的使用着值不可变的变量，它们就是常量，而且比 C 语言的常量更强大。在 Swift 中，如果你要处理的值不需要改变，那使用常量可以让你的代码更加安全并且更清晰地表达你的意图。<br>除了我们熟悉的类型，Swift 还增加了 Objective-C 中没有的高阶数据类型比如元组（Tuple）。元组可以让你创建或者传递一组数据，比如作为函数的返回值时，你可以用一个元组可以返回多个值。<br>Swift 还增加了可选（Optional）类型，用于处理值缺失的情况。可选表示“那儿有一个值，并且它等于 x ”或者“那儿没有值”。可选有点像在 Objective-C 中使用nil，但是它可以用在任何类型上，不仅仅是类。可选类型比 Objective-C 中的nil指针更加安全也更具表现力，它是 Swift 许多强大特性的重要组成部分。<br>Swift 是一门类型安全的语言，可选类型就是一个很好的例子。Swift 可以让你清楚地知道值的类型。如果你的代码期望得到一个String，类型安全会阻止你不小心传入一个Int。你可以在开发阶段尽早发现并修正错误。</p>
<p><strong>类型安全和类型推断</strong></p>
<blockquote>
<p>Swift 是一个类型安全（type safe）的语言。类型安全的语言可以让你清楚地知道代码要处理的值的类型。如果你的代码需要一个String，你绝对不可能不小心传进去一个Int。</p>
</blockquote>
<p>由于 Swift 是类型安全的，所以它会在编译你的代码时进行类型检查（type checks），并把不匹配的类型标记为错误。这可以让你在开发的时候尽早发现并修复错误。</p>
<p>当你要处理不同类型的值时，类型检查可以帮你避免错误。然而，这并不是说你每次声明常量和变量的时候都需要显式指定类型。如果你没有显式指定类型，Swift 会使用类型推断（type inference）来选择合适的类型。有了类型推断，编译器可以在编译代码的时候自动推断出表达式的类型。原理很简单，只要检查你赋的值即可。</p>
<p>因为有类型推断，和 C 或者 Objective-C 比起来 Swift 很少需要声明类型。常量和变量虽然需要明确类型，但是大部分工作并不需要你自己来完成。</p>
<p>当你声明常量或者变量并赋初值的时候类型推断非常有用。当你在声明常量或者变量的时候赋给它们一个字面量（literal value 或 literal）即可触发类型推断。（字面量就是会直接出现在你代码中的值，比如42和3.14159。）</p>
<p>例如，如果你给一个新常量赋值42并且没有标明类型，Swift 可以推断出常量类型是Int，因为你给它赋的初始值看起来像一个整数：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> meaningOfLife = <span class="number">42</span></span><br><span class="line">// meaningOfLife 会被推测为 Int 类型</span><br></pre></td></tr></table></figure>
<p>同理，如果你没有给浮点字面量标明类型，Swift 会推断你想要的是Double：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> pi = <span class="number">3.14159</span></span><br><span class="line">// pi 会被推测为 Double 类型</span><br></pre></td></tr></table></figure>
<p>当推断浮点数的类型时，Swift 总是会选择Double而不是Float。</p>
<p>如果表达式中同时出现了整数和浮点数，会被推断为Double类型：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> anotherPi = <span class="number">3</span> + <span class="number">0.14159</span></span><br><span class="line">// anotherPi 会被推测为 Double 类型</span><br></pre></td></tr></table></figure>
<p>原始值3没有显式声明类型，而表达式中出现了一个浮点字面量，所以表达式会被推断为Double类型。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Swift 是一门开发 iOS, OS X 和 watchOS 应用的新语言。然而，如果你有 C 或者 Objective-C 开发经验的话，你会发现 Swift 的很多内容都是你熟悉的。<br>]]>
    
    </summary>
    
      <category term="Swift" scheme="http://jiuzhou-romens.github.io.git/tags/Swift/"/>
    
      <category term="基础" scheme="http://jiuzhou-romens.github.io.git/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Study" scheme="http://jiuzhou-romens.github.io.git/categories/Study/"/>
    
  </entry>
  
</feed>
