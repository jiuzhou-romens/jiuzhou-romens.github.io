<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[赵九州的博客]]></title>
  <subtitle><![CDATA[虽然咸鱼翻身还是咸鱼,但至少可以变得好吃一点...]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://jiuzhou-romens.github.io.git/"/>
  <updated>2015-11-26T06:13:56.000Z</updated>
  <id>http://jiuzhou-romens.github.io.git/</id>
  
  <author>
    <name><![CDATA[Geovyn]]></name>
    <email><![CDATA[zhaojiuzhou@163.com#你的联系邮箱]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[UILable iOS9 改变]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/26/UILable/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/26/UILable/</id>
    <published>2015-11-26T06:13:56.000Z</published>
    <updated>2015-11-26T06:13:56.000Z</updated>
    <content type="html"><![CDATA[<p>UILable作为iOS最常用的控件之一</p>
<p><code>iOS 7.0 之后可用</code></p>
<blockquote>
<p>// 标题的风格<br>NSString <em>const UIFontTextStyleHeadline<br>// 副标题的风格<br>NSString </em>const UIFontTextStyleSubheadline<br>// 正文的字体<br>NSString <em>const UIFontTextStyleBody<br>// 脚注的字体<br>NSString </em>const UIFontTextStyleFootnote<br>// 标准字幕字体<br>NSString <em>const UIFontTextStyleCaption1<br>// 替换字幕字体<br>NSString </em>const UIFontTextStyleCaption2<br><a id="more"></a><br><img src="http://www.geovyn.com/images/lable.jpg" alt=""></p>
</blockquote>
<p><code>iOS 9.0 之后可用</code></p>
<blockquote>
<p>NSString <em>const UIFontTextStyleTitle1<br>NSString </em>const UIFontTextStyleTitle2<br>NSString *const UIFontTextStyleTitle3</p>
</blockquote>
<p>使用方式：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UILabel *styleHead = [[UILabel alloc] initWithFrame:CGRectMake(<span class="number">50</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">100</span>)];</span><br><span class="line">  styleHead.text = @<span class="string">"这是一段测试文字"</span>;</span><br><span class="line">  styleHead.font = [UIFont preferredFontForTextStyle:UIFontTextStyleSubheadline];</span><br></pre></td></tr></table></figure></p>
<h2 id="多行文本设置(iOS9_未改变)">多行文本设置(iOS9 未改变)</h2><p>纯代码布局使用最多的就是 <code>NSLineBreakByWordWrapping</code> <code>preferredMaxLayoutWidth</code> </p>
<blockquote>
<p>// Wrap at word boundaries, default        文本边缘处理<br>   NSLineBreakByWordWrapping<br>// Wrap at character boundaries            提前处理不合适的字符<br>  NSLineBreakByCharWrapping<br>// Simply clip                            简单线性处理<br>  NSLineBreakByClipping<br>// Truncate at head of line: “…wxyz”    丢失的开头用省略号表示<br>  NSLineBreakByTruncatingHead<br>// Truncate at tail of line: “abcd…”    丢失的文本在末尾显示省略号<br>  NSLineBreakByTruncatingTail<br>// Truncate middle of line:  “ab…yz”    丢失的文本在中间显示省略号<br>  NSLineBreakByTruncatingMiddle</p>
</blockquote>
<h2 id="新属性(是否允许文字进行收缩)">新属性(是否允许文字进行收缩)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@property(nonatomic) BOOL allowsDefaultTighteningForTruncation;</span><br></pre></td></tr></table></figure>
<p>该特性常与 <code>@property(nonatomic) CGFloat minimumScaleFactor;(设置最小收缩比例)</code> 结合使用。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>UILable作为iOS最常用的控件之一</p>
<p><code>iOS 7.0 之后可用</code></p>
<blockquote>
<p>// 标题的风格<br>NSString <em>const UIFontTextStyleHeadline<br>// 副标题的风格<br>NSString </em>const UIFontTextStyleSubheadline<br>// 正文的字体<br>NSString <em>const UIFontTextStyleBody<br>// 脚注的字体<br>NSString </em>const UIFontTextStyleFootnote<br>// 标准字幕字体<br>NSString <em>const UIFontTextStyleCaption1<br>// 替换字幕字体<br>NSString </em>const UIFontTextStyleCaption2<br>]]>
    
    </summary>
    
      <category term="UILable" scheme="http://jiuzhou-romens.github.io.git/tags/UILable/"/>
    
      <category term="iOS" scheme="http://jiuzhou-romens.github.io.git/tags/iOS/"/>
    
      <category term="iOS之UI控件" scheme="http://jiuzhou-romens.github.io.git/tags/iOS%E4%B9%8BUI%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用SDWebImage加载大量图片造成内存泄露的解决方法]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/25/SDWebImage%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/25/SDWebImage内存泄露解决方案/</id>
    <published>2015-11-25T01:40:31.000Z</published>
    <updated>2015-11-25T01:40:31.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/rs/SDWebImage" target="_blank" rel="external">SDWebImage</a> 我相信是个<code>iOS</code>码农都用过，在 github 上 11K+ star , 国内外大多数 App 使用它来进行图片加载。最近在做列表展示的时候，下拉新增不断的增加内容，发现内存占用越来越大，导致 memory warning 最终 terminate 。<br>  <a id="more"></a><br> 在SDWebImage的代码中对memory warning 的处理:<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> - (void)clearMemory &#123;</span><br><span class="line">    [self.memCache removeAllObjects];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>其中self.memCache是NSCache类型的，虽然SDWebImage本身对内存警告执行了操作，然而并没有什么X用。</p>
</blockquote>
<p>借助google查看到问题的具体原因和解决方案 <a href="https://github.com/rs/SDWebImage/issues/538" target="_blank" rel="external">issues538</a>。<br>因此在使用SDWebImage加载大量网络图片时，在下拉加载(刷新)中执行下列代码可解决此问题:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[SDImageCache sharedImageCache] <span class="built_in">set</span>Value:nil <span class="keyword">for</span>Key:@<span class="string">"memCache"</span>];</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/rs/SDWebImage">SDWebImage</a> 我相信是个<code>iOS</code>码农都用过，在 github 上 11K+ star , 国内外大多数 App 使用它来进行图片加载。最近在做列表展示的时候，下拉新增不断的增加内容，发现内存占用越来越大，导致 memory warning 最终 terminate 。<br>]]>
    
    </summary>
    
      <category term="Objective-C" scheme="http://jiuzhou-romens.github.io.git/tags/Objective-C/"/>
    
      <category term="SDWebImage" scheme="http://jiuzhou-romens.github.io.git/tags/SDWebImage/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Xcode插件管理]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/24/Xcode--%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/24/Xcode--插件管理/</id>
    <published>2015-11-24T10:30:28.000Z</published>
    <updated>2015-11-24T10:30:28.000Z</updated>
    <content type="html"><![CDATA[<h1 id="安装">安装</h1><p>终端输入:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/supermarin/Alcatraz/master/Scripts/install.sh | sh</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h1 id="卸载">卸载</h1><p>删除插件:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/Library/Application\ Support/Developer/Shared/Xcode/Plug-ins/Alcatraz.xcplugin</span><br></pre></td></tr></table></figure></p>
<p>删除缓存数据:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/Library/Application\ Support/Alcatraz</span><br></pre></td></tr></table></figure></p>
<p><a href="http://www.cocoachina.com/industry/20130918/7022.html" target="_blank" rel="external">那些不能错过的Xcode插件</a><br><a href="http://www.bubuko.com/infodetail-963903.html" target="_blank" rel="external">插件无法运行</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="安装">安装</h1><p>终端输入:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://raw.githubusercontent.com/supermarin/Alcatraz/master/Scripts/install.sh | sh</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="Alcatraz" scheme="http://jiuzhou-romens.github.io.git/tags/Alcatraz/"/>
    
      <category term="Xcode" scheme="http://jiuzhou-romens.github.io.git/tags/Xcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Markdown学习指南]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/24/Markdown/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/24/Markdown/</id>
    <published>2015-11-24T06:39:59.000Z</published>
    <updated>2015-11-24T06:39:59.000Z</updated>
    <content type="html"><![CDATA[<p> Markdown的语法已经足够简单，但是现有的<a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown语法</a>说明更多的是写给web从业者看的，对于很多写作者来说，学习起来效率很低，从<a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">作业部落</a>到<a href="http://www.jianshu.com/" target="_blank" rel="external">简书</a>，从写作者的实际需求出发，总结真正实用的常用格式，深入浅出 <code>Markdown</code> 语法。<br> <a id="more"></a></p>
<h1 id="标题">标题</h1><p>这是最为常用的格式，在<code>Markdown</code>中，你只需要在文本前面加上<code>#</code>号，标题分级，增加<code>#</code>即可。</p>
<blockquote>
<h1 id="一级标题">一级标题</h1><h2 id="二级标题">二级标题</h2><h3 id="三级标题">三级标题</h3><h4 id="四级标题">四级标题</h4><h5 id="五级标题">五级标题</h5><h6 id="六级标题">六级标题</h6></blockquote>
<p>注意：<code>#</code>和<code>一级标题</code>之间保留一个空格，这才是<code>Markdown</code>的标准写法。</p>
<h1 id="列表">列表</h1><p>列表格式也很常用，在 Markdown 中，你只需要在文字前面加上<code>-</code>(无序)或者<code>1.</code>(有序)就可以了，例如：</p>
<blockquote>
<ul>
<li>参考文本1</li>
<li>参考文本2</li>
<li>参考文本3</li>
</ul>
<ol>
<li>参考文本1</li>
<li>参考文本2</li>
<li>参考文本3</li>
</ol>
</blockquote>
<p>注意：<code>-</code> <code>1.</code>和参考文本之间保留一个空格。</p>
<h1 id="链接和图片">链接和图片</h1><p>在<code>Markdown</code>中，插入链接你只需要使用<code>[显示文本](链接地址)</code> 这样的语法即可，例如：<br><a href="http://www.geovyn.com" target="_blank" rel="external">我的博客</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[我的博客](http://www.geovyn.com)</span><br></pre></td></tr></table></figure></p>
<p>在<code>Markdown</code>中，插入图片你只需要使用 <code>![](图片地址)</code> 这样的语法即可，例如：<br><img src="http://www.geovyn.com/images/avatar.jpg" alt=""><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](http://www.geovyn.com/images/avatar.jpg)</span><br></pre></td></tr></table></figure></p>
<h1 id="引用">引用</h1><p>写作的时候需要引用他人的文字，这个时候引用这个格式就很有必要了，在<code>Markdown</code>中，你只需要在你希望引用的文字前面加上<code>&gt;</code>就好了。例如：</p>
<blockquote>
<p>床前明月光<br>疑是地上霜<br>举头望明月<br>低头思故乡</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 床前明月光</span><br><span class="line">&gt; 疑是地上霜</span><br><span class="line">&gt; 举头望明月</span><br><span class="line">&gt; 低头思故乡</span><br></pre></td></tr></table></figure>
<h1 id="粗体和斜体">粗体和斜体</h1><p>用两个<code>*</code>包含一段文本就是粗体的语法，用一个<code>*</code>包含一段文本就是斜体的语法。例如：<br>    <strong>2015</strong> <em>美好开始</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**<span class="number">2015</span>** *美好开始*</span><br></pre></td></tr></table></figure></p>
<h1 id="表格">表格</h1><p>默认居左,<code>:----:</code>居中,<code>-----:</code>居右。</p>
<table>
<thead>
<tr>
<th>姓名:</th>
<th style="text-align:center">性别:</th>
<th style="text-align:right">年龄:</th>
</tr>
</thead>
<tbody>
<tr>
<td>张三</td>
<td style="text-align:center">男</td>
<td style="text-align:right">18</td>
</tr>
<tr>
<td>李四</td>
<td style="text-align:center">男</td>
<td style="text-align:right">19</td>
</tr>
<tr>
<td>王小妹</td>
<td style="text-align:center">女</td>
<td style="text-align:right">20</td>
</tr>
</tbody>
</table>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 姓名:          | 性别:         | 年龄:  |</span><br><span class="line">| ------------- |:-------------:|-----:|</span><br><span class="line">| 张三           | 男            | <span class="number">18</span>    |</span><br><span class="line">| 李四           | 男            | <span class="number">19</span>    |</span><br><span class="line">| 王小妹         | 女            | <span class="number">20</span>    |</span><br></pre></td></tr></table></figure>
<h1 id="显示链接中带括号的图片">显示链接中带括号的图片</h1><p><img src="http://latex.codecogs.com/gif.latex?\prod%20\(n_{i}\)+1" alt=""></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![][<span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span>]: http://latex.codecogs.com/gif.latex?\prod%<span class="number">20</span>\(n_&#123;i&#125;\)+<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h1 id="阅读更多">阅读更多</h1><p>使用代码<code>&lt;!-- more --&gt;</code>即可。</p>
<h1 id="结语">结语</h1><p>以上几种格式是比较常用的格式，对于写作来说应该基本够用了，如果想了解跟多可以参考<a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown语法说明</a>。<br>强烈建议您现在就立马用 Markdown 写一篇文章吧，体会一下 Markdown 的优雅之处！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p> Markdown的语法已经足够简单，但是现有的<a href="http://wowubuntu.com/markdown/">Markdown语法</a>说明更多的是写给web从业者看的，对于很多写作者来说，学习起来效率很低，从<a href="https://www.zybuluo.com/mdeditor">作业部落</a>到<a href="http://www.jianshu.com/">简书</a>，从写作者的实际需求出发，总结真正实用的常用格式，深入浅出 <code>Markdown</code> 语法。<br>]]>
    
    </summary>
    
      <category term="Markdown" scheme="http://jiuzhou-romens.github.io.git/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo主题Yilia]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/24/Hexo%E4%B8%BB%E9%A2%98/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/24/Hexo主题/</id>
    <published>2015-11-24T01:56:20.000Z</published>
    <updated>2015-11-24T01:56:19.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">hexo-theme-yilia</a> 是为 <a href="https://github.com/tommy351/hexo" target="_blank" rel="external">hexo</a> 2.4+制作的主题。<br>响应式设计，风格简约。<br><a id="more"></a><br>终于从octopress迁移到hexo。Yilia是自己设计的主题，分享之，有爱请自取。关于主题：</p>
<ol>
<li>我喜欢简约。所以标签云，搜索框都拿掉了</li>
<li>接地气一点。所以用上了jiathis分享，友言评论，以及baidu的cdn</li>
<li>让大家把注意力放到内容上。这是本主题设计初衷</li>
<li>主题不支持IE6，7，8。以后也不会</li>
</ol>
<p>一、使用</p>
<p><strong>1. 安装</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>
<p><strong>2. 配置</strong></p>
<p>修改hexo根目录下的 <code>_config.yml</code> ： <code>theme: yilia</code></p>
<p><strong>3. 更新</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/yilia</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<p>二、外观</p>
<p><strong>宽屏</strong><br><img src="http://littendomo.sinaapp.com/yilia/yilia-pc1.png" alt="宽屏">        </p>
<p><strong>宽屏文字</strong><br><img src="http://littendomo.sinaapp.com/yilia/yilia-pc2.png" alt="宽屏文字">   </p>
<p><strong>窄屏</strong><br><img src="http://littendomo.sinaapp.com/yilia/yilia-pc3.png" alt="窄屏">     </p>
<p><strong>同步instagram</strong><br><img src="http://littendomo.sinaapp.com/yilia/yilia-pc4.png" alt="同步instagram"></p>
<p><strong>移动端</strong><br><img src="http://littendomo.sinaapp.com/yilia/yilia-mobile.png" alt="移动端"><br><img src="http://littendomo.sinaapp.com/yilia/yilia-mobile2.png" alt="移动端">   </p>
<p>三、配置</p>
<p>主题配置文件在主目录下的<code>_config.yml</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Header&#10;menu:&#10;  &#20027;&#39029;: /&#10;  &#25152;&#26377;&#25991;&#31456;: /archives&#10;  # &#38543;&#31508;: /tags/&#38543;&#31508;&#10;&#10;# SubNav&#10;subnav:&#10;  github: &#34;https://github.com/litten&#34;&#10;  weibo: &#34;http://weibo.com/litten225&#34;&#10;  rss: &#34;http://feed.feedsky.com/litten&#34;&#10;  # facebook: &#34;/&#34;&#10;  # google: &#34;/&#34;&#10;  # twitter: &#34;/&#34;&#10;  # linkedin: &#34;/&#34;&#10;&#10;rss: /atom.xml&#10;&#10;# Content&#10;excerpt_link: more&#10;fancybox: true&#10;&#10;# Miscellaneous&#10;&#10;favicon: /favicon.png&#10;&#10;avatar: &#34;https://avatars2.githubusercontent.com/u/2024949?v=2&#38;s=150&#34;&#10;share: true&#10;duoshuo: true</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/litten/hexo-theme-yilia">hexo-theme-yilia</a> 是为 <a href="https://github.com/tommy351/hexo">hexo</a> 2.4+制作的主题。<br>响应式设计，风格简约。<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://jiuzhou-romens.github.io.git/tags/Hexo/"/>
    
      <category term="主题" scheme="http://jiuzhou-romens.github.io.git/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/23/Hello%20World/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/23/Hello World/</id>
    <published>2015-11-23T08:51:53.000Z</published>
    <updated>2015-11-23T08:51:53.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://jiuzhou-romens.github.io.git/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 学习记录]]></title>
    <link href="http://jiuzhou-romens.github.io.git/2015/11/20/Swift%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/"/>
    <id>http://jiuzhou-romens.github.io.git/2015/11/20/Swift基础部分/</id>
    <published>2015-11-20T05:50:12.000Z</published>
    <updated>2015-11-26T06:51:12.000Z</updated>
    <content type="html"><![CDATA[<p>Swift 是一门开发 iOS, OS X 和 watchOS 应用的新语言。然而，如果你有 C 或者 Objective-C 开发经验的话，你会发现 Swift 的很多内容都是你熟悉的。<br><a id="more"></a></p>
<h1 id="简单值">简单值</h1><p>swift 全局作用域的代码会自动当做程序的入口，所以你不需要main函数，同样你也不需要在每个函数结尾加上分号。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">"Hello, World!"</span>)</span><br></pre></td></tr></table></figure></p>
<h1 id="数组">数组</h1><p>swift 使用方括号 <code>[ ]</code> 来创建数组和字典,并使用下标或者键 (key) 来访问元素。最后一个元素后面允许有个逗号。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var shopingList = [<span class="string">"apple"</span>,<span class="string">"orange"</span>,<span class="string">"bananer"</span>]; // 数组</span><br><span class="line">var occupations = [<span class="string">"He"</span>:<span class="string">"Captain"</span>,<span class="string">"She"</span>:<span class="string">"Mechanic"</span>]; // 字典</span><br><span class="line">// 创建一个空数组或者字典,使用初始化语法</span><br><span class="line"><span class="built_in">let</span> emptyArr = [String]()</span><br><span class="line"><span class="built_in">let</span> emptyDictionary = [String:Float]();</span><br><span class="line"></span><br><span class="line">// 类型信息可以被推断出来</span><br><span class="line">shopingList = [];</span><br><span class="line">occupations = [:];</span><br></pre></td></tr></table></figure></p>
<h1 id="控制流">控制流</h1><p>swift 使用if switch 进行条件操作  使用for in ，for while <code>repeat</code>-while 进行循环  （条件和循环变量括号可以省略 但是语句体的大括号是必须的）</p>
<p>在if语句中，条件必须是一个布尔表达式–这意味着 if score {…} 这样的代码报错，而不会隐形的与0作对比，你可以一起使用if 和 let 来处理值缺失的情况，有些变量的值是可选的可能是一个具体的值或者是nil表示值缺失 在类型后面加一个问号来标记这个值是可选的</p>
<p>如果可选值是nil 条件判断会是false 大括号中代码会被跳过，如果不是nil 会将值赋给let 后面的常量 这样代码块就可以使用这个值了(声明let可以用于匹配某部分固定值的模式).<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var optionalString: String?=<span class="string">"Hello"</span></span><br><span class="line">var optionalName: String? = nil</span><br><span class="line">var greeting = <span class="string">"Hello"</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">let</span> name = optionalName</span><br><span class="line">&#123;</span><br><span class="line">    greeting = <span class="string">"hello,\(name)"</span></span><br><span class="line">    <span class="built_in">print</span>(greeting);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">let</span> name = optionalName</span><br><span class="line">    greeting = <span class="string">"hello world \(name)"</span></span><br><span class="line">    <span class="built_in">print</span>(greeting)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>switch 支持任意类型的数据以及各种比较操作——不仅仅是整数以及测试相等。运行 switch 中匹配到的子句之后,程序会退出 switch 语句,并不会继续向下运行,所以不需要在每个子句结尾 写 break 。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> vegetable = <span class="string">"celery"</span></span><br><span class="line">    switch vegetable &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="built_in">let</span> x <span class="built_in">where</span> x.hasSuffix(<span class="string">"y"</span>):</span><br><span class="line">            <span class="built_in">let</span> vegetableComment = <span class="string">"Is it a spicy \(x)?"</span></span><br><span class="line">            <span class="built_in">print</span>(vegetableComment)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"celery"</span>:</span><br><span class="line">            <span class="built_in">let</span> vegetableComment = <span class="string">"Add some raisins and make ants on a log."</span></span><br><span class="line">            <span class="built_in">print</span>(vegetableComment)</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"cucumber"</span>, <span class="string">"watercress"</span>:</span><br><span class="line">            <span class="built_in">let</span> vegetableComment = <span class="string">"That would make a good tea sandwich."</span></span><br><span class="line">            <span class="built_in">print</span>(vegetableComment)</span><br><span class="line">        default:</span><br><span class="line">            <span class="built_in">let</span> vegetableComment = <span class="string">"Everything tastes good in soup."</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>你可以使用for - in 遍历字典 需要两个变量来表示每个键值对，字典是一个无序的集合，所以他们的键和值以任意顺序迭代结束</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> interestingNumber = [<span class="string">"Fibonacci"</span>:[<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>],<span class="string">"Square"</span>:[<span class="number">1</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">25</span>],<span class="string">"prime"</span>:[<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>]]</span><br><span class="line">var largest = <span class="number">0</span>;</span><br><span class="line">var strKind :String = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(kind, numbers) <span class="keyword">in</span> interestingNumber</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> numbers</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> number &gt; largest</span><br><span class="line">        &#123;</span><br><span class="line">            largest = number;</span><br><span class="line">            strKind = kind;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>你可以在循环中使用 ..&lt; 来表示范围,也可以使用传统的写法,两者是等价的, 使用 ..&lt; 创建的范围不包含上界,如果想包含的话需要使用 …<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var firstForLoop = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">4</span>&#123;</span><br><span class="line">firstForLoop += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(firstForLoop)</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Swift 是一门开发 iOS, OS X 和 watchOS 应用的新语言。然而，如果你有 C 或者 Objective-C 开发经验的话，你会发现 Swift 的很多内容都是你熟悉的。<br>]]>
    
    </summary>
    
      <category term="Swift" scheme="http://jiuzhou-romens.github.io.git/tags/Swift/"/>
    
      <category term="基础" scheme="http://jiuzhou-romens.github.io.git/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="学习记录" scheme="http://jiuzhou-romens.github.io.git/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
